# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Example of extracting secrets from 1password (or another compatible pw manager)
# SECRETS=$(kamal secrets fetch --adapter 1password --account your-account --from Vault/Item KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD ${SECRETS})
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY ${SECRETS})

# Use a GITHUB_TOKEN if private repositories are needed for the image
# GITHUB_TOKEN=$(gh config get -h github.com oauth_token)

# Grab the registry password from ENV
KAMAL_REGISTRY_PASSWORD=$(cat .env.staging | grep KAMAL_REGISTRY_PASSWORD | cut -d'=' -f2)

# Improve security by using a password manager. Never check config/master.key into git!
RAILS_MASTER_KEY=$(cat config/master.key)
SECRET_KEY_BASE=$(cat .env.staging | grep SECRET_KEY_BASE | cut -d'=' -f2)
HEIMDALL_VERSION=$(cat .env.staging | grep HEIMDALL_VERSION | cut -d'=' -f2)
SSL_DOMAIN=$(cat .env.staging | grep SSL_DOMAIN | cut -d'=' -f2)
SMTP_USER_NAME=$(cat .env.staging | grep SMTP_USER_NAME | cut -d'=' -f2)
MAILERSEND_API_TOKEN=$(cat .env.staging | grep MAILERSEND_API_TOKEN | cut -d'=' -f2)
MAILERSEND_API_WEBHOOK_SECRET=$(cat .env.staging | grep MAILERSEND_API_WEBHOOK_SECRET | cut -d'=' -f2)
SMSAPI_API_TOKEN=$(cat .env.staging | grep SMSAPI_API_TOKEN | cut -d'=' -f2)
WEB_HOST=$(cat .env.staging | grep WEB_HOST | cut -d'=' -f2)
SOLID_QUEUE_IN_PUMA=$(cat .env.staging | grep SOLID_QUEUE_IN_PUMA | cut -d'=' -f2)
MYSQL_ROOT_PASSWORD=$(cat .env.staging | grep MYSQL_ROOT_PASSWORD | cut -d'=' -f2)