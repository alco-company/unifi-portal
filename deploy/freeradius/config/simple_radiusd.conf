# Simplified FreeRADIUS configuration for basic testing
# This version excludes the REST module to get FreeRADIUS running first

# Basic server configuration
prefix = /etc/freeradius
exec_prefix = ${prefix}
sysconfdir = ${prefix}
localstatedir = /var
sbindir = ${exec_prefix}/sbin
logdir = /var/log/radius
raddbdir = ${sysconfdir}/freeradius
radacctdir = ${logdir}/radacct

# Process and security
name = freeradius
confdir = ${raddbdir}
run_dir = /var/run/freeradius
db_dir = /var/lib/freeradius
libdir = /usr/lib/freeradius
pidfile = ${run_dir}/${name}.pid
user = nobody
group = nobody
max_request_time = 30
cleanup_delay = 5
max_requests = 16384

# Logging
log {
    destination = stdout
    colourise = yes
    file = ${logdir}/radius.log
    syslog_facility = daemon
    stripped_names = no
    auth = yes
    auth_badpass = yes 
    auth_goodpass = yes
    msg_denied = "You are already logged in - access denied"
}

# Security
security {
    allow_core_dumps = no
    max_attributes = 200
    reject_delay = 1
    status_server = yes
}

# Instantiate basic modules
instantiate {
    pap
    chap
    files
    detail
    radutmp
    always
}

# Simple virtual server for testing
server default {
    listen {
        type = auth
        ipaddr = *
        port = 1812
        limit {
            max_connections = 16
            lifetime = 0
            idle_timeout = 30
        }
    }

    listen {
        type = acct
        ipaddr = *
        port = 1813
        limit {
            max_connections = 16
            lifetime = 0
            idle_timeout = 30
        }
    }

    authorize {
        # Simple file-based authorization for testing
        files
        
        # For now, we'll create a simple test user
        # In the users file: testuser Auth-Type := Accept
        pap
    }

    authenticate {
        Auth-Type PAP {
            # For testing - accept any password for test users
            # This will be replaced with REST API calls later
            pap
        }
    }

    preacct {
        suffix
        files
    }

    accounting {
        detail
        radutmp
    }

    session {
        radutmp
    }

    post-auth {
        # Log successful authentications
        if (ok || updated) {
            # Future: call Heimdall API here
            noop
        }

        Post-Auth-Type REJECT {
            # Log failed attempts
            noop
        }
    }
}
